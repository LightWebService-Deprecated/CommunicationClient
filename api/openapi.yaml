openapi: 3.0.2
info:
  title: LightWebService Authentication Server
  version: 1.0.0
servers:
- description: LWS Individual Web Server
  url: https://localhost
tags:
- description: Account(Register, Edit, Dropout) Related APIs
  name: Account
paths:
  /api/account:
    get:
      description: This API will get account information, such as email address and
        nickname.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountResponse'
          description: When successfully got account information.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: When API Request is not authorized.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Somehow account information is not found.
      security:
      - AccessTokenSecurity: []
      summary: Get Account Information, Except for password
      tags:
      - Account
    post:
      description: This API will add new account entity and send event message to
        Kubernetes Server(for creating user-default namespaces)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        "200":
          description: When successfully registered account
      summary: Register Account
      tags:
      - Account
components:
  schemas:
    RegisterRequest:
      example:
        userPassword: userPassword
        userEmail: userEmail
        userNickName: userNickName
      properties:
        userEmail:
          description: Email Address
          format: email
          type: string
        userNickName:
          description: User Nickname
          type: string
        userPassword:
          description: User Password
          type: string
      type: object
    AccountResponse:
      example:
        accountState: accountState
        nickName: nickName
        roles:
        - roles
        - roles
        id: id
        email: email
      properties:
        id:
          description: Account Unique ID
          type: string
        email:
          description: Email Address
          format: email
          type: string
        nickName:
          description: User Nickname
          type: string
        accountState:
          description: Account State - Created, Ready, Revoked, DroppedOut, Error
          type: string
        roles:
          description: Account roles - like admin, and normal user
          items:
            type: string
          type: array
      type: object
    ErrorResponse:
      properties:
        message:
          description: Error Message Title
          type: string
        detailMessage:
          description: Error Message Detail
          type: string
      type: object
  securitySchemes:
    AccessTokenSecurity:
      description: LWS Access Token
      scheme: bearer
      type: http
